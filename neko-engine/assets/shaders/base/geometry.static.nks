#include "base/geometry.base.nks"

#begin vertex
    layout(location = 0) in vec3 vertexPosition;
    layout(location = 1) in vec3 vertexNormal;
    layout(location = 2) in vec2 vertexTexCoords;

    uniform mat4 viewMatrix;
    uniform mat4 projectionMatrix;
    uniform mat4 modelMatrix;

    void main() {
        vec4 worldSpacePos = modelMatrix * vec4(vertexPosition, 1.0f);
        gl_Position = projectionMatrix * viewMatrix * worldSpacePos;

        mat3 normalMatrix = mat3(transpose(inverse(modelMatrix)));

        fragmentPosition = worldSpacePos.xyz;
        fragmentNormal = normalize(normalMatrix * vertexNormal);
        fragmentTexCoords = vertexTexCoords;
    }
#end vertex
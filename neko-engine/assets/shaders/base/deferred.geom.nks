#version 330 core

#begin shared
    vec3 fragmentPosition;
    vec3 fragmentColor;
    vec3 fragmentNormal;
    vec2 fragmentTexCoords;
#end shared

#begin vertex
    layout(location = 0) in vec3 vertexPosition;
    layout(location = 1) in vec3 vertexColor;
    layout(location = 2) in vec3 vertexNormal;
    layout(location = 3) in vec2 vertexTexCoords;

    uniform mat4 viewMatrix;
    uniform mat4 projectionMatrix;
    uniform mat4 modelMatrix;

    void main() {
        mat4 mvpMatrix = projectionMatrix * viewMatrix * modelMatrix;
        mat3 normalMatrix = mat3(modelMatrix);

        vec4 pos = mvpMatrix * vec4(vertexPosition, 1.0f);
        gl_Position = pos;

        fragmentPosition = pos.xyz;
        fragmentColor = vertexColor;
        fragmentNormal = normalize(vertexNormal * normalMatrix);
        fragmentTexCoords = vertexTexCoords;
    }
#end vertex

#begin fragment
    layout(location = 0) out vec4 gPosition;
    layout(location = 1) out vec4 gNormal;
    layout(location = 2) out vec4 gAlbedo;

    uniform sampler2D textureSampler;

    void main() {
        gPosition = vec4(fragmentPosition, 1.0f);
        gNormal = vec4(fragmentNormal, 1.0f);
        gAlbedo = texture(textureSampler, fragmentTexCoords);

        if (gAlbedo.a <= 0.15)
            discard;
    }
#end fragment
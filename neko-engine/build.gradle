import org.gradle.internal.os.OperatingSystem

plugins {
    id 'org.jetbrains.kotlin.jvm' version '1.4.30'
}

group 'de.twometer.neko'
version '2.0.0-alpha'

/* LWJGL Configuration */
project.ext.lwjglVersion = "3.2.3"

switch (OperatingSystem.current()) {
    case OperatingSystem.LINUX:
        project.ext.lwjglNatives = "natives-linux"
        break
    case OperatingSystem.MAC_OS:
        project.ext.lwjglNatives = "natives-macos"
        break
    case OperatingSystem.WINDOWS:
        project.ext.lwjglNatives = "natives-windows"
        break
}

repositories {
    mavenCentral()
}

dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8"

    api platform("org.lwjgl:lwjgl-bom:$lwjglVersion")
    api "org.lwjgl:lwjgl"
    api "org.lwjgl:lwjgl-assimp"
    api "org.lwjgl:lwjgl-glfw"
    api "org.lwjgl:lwjgl-openal"
    api "org.lwjgl:lwjgl-opengl"
    api "org.lwjgl:lwjgl-stb"
    api "org.lwjgl:lwjgl-tinyfd"

    api "org.joml:joml:1.10.0"
    api 'org.greenrobot:eventbus:3.2.0'
    api 'io.github.microutils:kotlin-logging:1.12.0'
    api 'org.slf4j:slf4j-api:1.7.30'
    api 'com.labymedia:ultralight-java-base:0.3.6'
    api 'com.labymedia:ultralight-java-databind:0.3.6'

    runtimeOnly "org.lwjgl:lwjgl::$lwjglNatives"
    runtimeOnly "org.lwjgl:lwjgl-assimp::$lwjglNatives"
    runtimeOnly "org.lwjgl:lwjgl-glfw::$lwjglNatives"
    runtimeOnly "org.lwjgl:lwjgl-openal::$lwjglNatives"
    runtimeOnly "org.lwjgl:lwjgl-opengl::$lwjglNatives"
    runtimeOnly "org.lwjgl:lwjgl-stb::$lwjglNatives"
    runtimeOnly "org.lwjgl:lwjgl-tinyfd::$lwjglNatives"
}

jar {
    from {
        configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) }
    }
}